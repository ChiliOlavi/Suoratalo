import{e as R,r as o,j as x,p as j,c as z}from"./pipelines-DTrqgdQT.js";R.allowRemoteModels=!0;const b="Xenova/bert-base-multilingual-cased",v=50;function S(e){return e.replace(/\[CLS\]/g,"").replace(/\[SEP\]/g,"").replace(/\[UNK\]/g,"").replace(/\s+/g," ").trim()}function A({initialText:e,modelName:i=b,topKPredictions:p=v}){const[w,a]=o.useState(e),[d,k]=o.useState(!0),[m,g]=o.useState(!1),u=o.useRef(null);o.useEffect(()=>{(async()=>{try{k(!0),u.current=await j("fill-mask",i)}catch(c){console.error("Failed to load pipeline:",c),a("Error loading model. Please check console.")}finally{k(!1)}})()},[i]);const E=o.useCallback(async()=>{if(d||m||!u.current)return;g(!0);const n=u.current;try{const c=e,_=await n.tokenizer(c,{addSpecialTokens:!0});console.log("Text is mixing.");let s=[..._.input_ids.data],r=[];for(let t=1;t<s.length-1;++t)r.push(t);let T=0;for(;r.length>0&&T<20;){const t=r[Math.floor(Math.random()*r.length)],h=[...s];h[t]=n.tokenizer.mask_token_id;const y=await n.tokenizer.decode(h,{skipSpecialTokens:!1}),f=await n(y,{top_k:p});if(f.length>0){const l=s[t],M=f.find(P=>P.token!==l);M?s[t]=M.token:s[t]=f[0].token}r=r.filter(l=>l!==t),T+=1;const L=await n.tokenizer.decode(s,{skipSpecialTokens:!1});a(S(L)),await new Promise(l=>setTimeout(l,100))}const I=await n.tokenizer.decode(s,{skipSpecialTokens:!1});a(S(I))}catch(c){console.error("Error during text mixing:",c),a("Error mixing text. Please check console.")}finally{g(!1)}},[e,d,m,i,p]);return o.useEffect(()=>{a(e)},[e]),o.useEffect(()=>{!d&&u.current&&E()},[e,d,E]),x.jsx("div",{children:x.jsx("p",{children:w})})}document.querySelectorAll("p.mix-me").forEach(e=>{if(e.dataset.mixedMounted)return;e.dataset.mixedMounted="true";const i=e.textContent;e.innerHTML="",z.createRoot(e).render(x.jsx(A,{initialText:i}))});
